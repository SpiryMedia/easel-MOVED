$column_outer_width: $column_width + $column_gutter;
$container_width: $column_outer_width * $column_count - $column_gutter;

// container
@mixin container($width: $container_width, $offset: 0) {
  width: $width - $offset;
  margin: 0 auto;
	@include clearfix;
}

// columns
@mixin column($n: false, $last: false) {
  @include float(left);
  @if $n {
    @include column_width($n);
  }
	@if $last {
    @include last;
  }
  @else {
    margin-right: $column_gutter;
  }
}
@mixin column_width($n) {
  $width: $column_width * $n + $column_gutter * ($n - 1);
  width: $width;
}
@mixin last {
  margin-right: 0;
}

// append
@mixin append($n) {
  padding-right: $column_outer_width * $n;
}

//prepend
@mixin prepend($n) {
  padding-left: $column_outer_width * $n;
}

// pull
@mixin pull($n, $last: false) {
  @if $last {
    margin-left: -$column_outer_width * $n + $column_gutter;
  }
  @else {
    margin-left: -$column_outer_width * $n;
  }
}

// push
@mixin push($n, $last: false) {
  @if $last {
    margin-left: $column_outer_width * $n + $column_gutter;
  }
  @else {
    margin-left: $column_outer_width * $n;
  }
}

// grid classes
@mixin grid {
  @for $n from 1 through $column_count {
  	.col-#{$n} {
  		@include column($n);
  	}
  	.append-#{$n} {
  		@include append($n);
  	}
  	.prepend-#{$n} {
  		@include prepend($n);
  	}
  	.pull-#{$n} {
  	  @include pull($n);
  	}
  	.push-#{$n} {
  	  @include push($n);
  	}
  }

  .col-#{$column_count},
  .col-last {
  	@include last;
  }
  .col {
    @include column;
  }
  .container {
    @include container;
  } 
}
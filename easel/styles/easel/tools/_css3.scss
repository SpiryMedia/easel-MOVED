// --------------------------------------------------
// css3 PIE
// http://css3pie.com/
// --------------------------------------------------
@mixin pie {
  behavior: url($easel-dir + 'tools/PIE.htc');
  position: relative;
}
.pie {
  @include pie;
}

// --------------------------------------------------
// text-shadow
// --------------------------------------------------
@mixin text-shadow(
  $x: $base-text-shadow-x,
  $y: $base-text-shadow-y,
  $blur: $base-text-shadow-blur,
  $color: $base-text-shadow-color) {
	-moz-text-shadow: $x $y $blur $color;
	-webkit-text-shadow: $x $y $blur $color;
	text-shadow: $x $y $blur $color;
}
@mixin no-text-shadow {
  @include text-shadow(0, 0, 0);
}

// --------------------------------------------------
// box-shadow
// --------------------------------------------------
@mixin box-shadow(
  $x: $base-box-shadow-x,
  $y: $base-box-shadow-y,
  $blur: $base-box-shadow-blur,
  $spread: $base-box-shadow-spread,
  $color : $base-box-shadow-color,
  $inset: false) {
  @extend .pie;
  @if $inset {
    -moz-box-shadow: $x $y $blur $spread $color inset;
  	-webkit-box-shadow: $x $y $blur $spread $color inset;
  	box-shadow: $x $y $blur $spread $color inset;
  }
  @else {
    -moz-box-shadow: $x $y $blur $spread $color;
  	-webkit-box-shadow: $x $y $blur $spread $color;
  	box-shadow: $x $y $blur $spread $color;
  }
}
@mixin no-box-shadow {
  @include box-shadow(0, 0, 0, 0);
}

// --------------------------------------------------
// opacity
// --------------------------------------------------
@mixin opacity($opacity) {
	-moz-opacity: $opacity;
	-khtml-opacity: $opacity;
	opacity: $opacity;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})";
	filter: alpha(opacity=$opacity * 100);
}

// --------------------------------------------------
// border-radius
// PIE only works with shorthand method
// --------------------------------------------------
@mixin border-radius(
  $radius: $base-border-radius,
  $tl: $base-border-radius,
  $tr: $base-border-radius,
  $br: $base-border-radius,
  $bl: $base-border-radius) {
  @extend .pie;
  @if $radius {
    $tl: $radius;
    $tr: $radius;
    $br: $radius;
    $bl: $radius;
  }
  -moz-border-radius: $tl $tr $br $bl;
  -webkit-border-radius: $tl $tr $br $bl;
  border-radius: $tl $tr $br $bl;
}
@mixin border-radius-t($radius: $base-border-radius) {
  @include border-radius(false, $radius, $radius, 0, 0);
}
@mixin border-radius-r($radius: $base-border-radius) {
  @include border-radius(false, 0, $radius, $radius, 0);
}
@mixin border-radius-b($radius: $base-border-radius) {
  @include border-radius(false, 0, 0, $radius, $radius);
}
@mixin border-radius-l($radius: $base-border-radius) {
  @include border-radius(false, $radius, 0, 0, $radius);
}
@mixin border-radius-tl($radius: $base-border-radius) {
  @include border-radius(false, $radius, 0, 0, 0);
}
@mixin border-radius-tr($radius: $base-border-radius) {
  @include border-radius(false, 0, $radius, 0, 0);
}
@mixin border-radius-br($radius: $base-border-radius) {
  @include border-radius(false, 0, 0, $radius, 0);
}
@mixin border-radius-bl($radius: $base-border-radius) {
  @include border-radius(false, 0, 0, 0, $radius);
}

// set a single corner (does not work with cssPIE)
@mixin border-corner-radius($x, $y, $radius: $base-border-radius) {
  -moz-border-radius-#{$y}-#{$x}: $radius;
  -webkit-border-#{$y}-#{$x}-radius: $radius;
  border-#{$y}-#{$x}-radius: $radius;
}

// --------------------------------------------------
// @font-face
// --------------------------------------------------
@mixin font-face(
  $name,
  $font-file,
  $weight: normal,
  $style: normal) {
  @font-face {
    font-family: quote($name);
    src: url('#{$font-file}' + '.eot');
  	src: local('â˜º'), url('#{$font-file}' + '.ttf') format('truetype'), url('#{$font-file}' + '.svg#webfont') format('svg');
  	@if $weight {
      font-weight: $weight;
    }
    @if $style {
      font-weight: $style;
    }
  }
}

// --------------------------------------------------
// rgba backgrounds
// --------------------------------------------------
@mixin rgba($color, $opacity) {
  @extend .pie;
  background-color: $color;
  background-color: rgba($color, $opacity);
  -pie-background: rgba($color, $opacity);
}

// --------------------------------------------------
// multiple backgrounds
// --------------------------------------------------
@mixin multiple-backgrounds($value) {
  @extend .pie;
  background: unquote($value);
  -pie-background: unquote($value);
}

// --------------------------------------------------
// vertical gradient
// --------------------------------------------------
@mixin vertical-gradient($start: #000, $end: #fff) {
  @extend .pie;
  background: $end;
  background: -moz-linear-gradient(center top, $start 0%, $end 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, $start), color-stop(1, $end) );
  -pie-background: linear-gradient(90deg, $start, $end);
}